#!/usr/bin/env perl
# generate_stl - back-generate STL files from previous OpenSCAD file revisions
# Andrew Ho (andrew@zeuscat.com)

use strict;
use warnings;
use File::Basename qw(basename);
our $ME = basename($0);

my @output = `git log --reverse --name-status --oneline`;
my($commit, $message, @filenames);
while(@output) {
    my $line = shift @output;
    chomp $line;
    if($line =~ /^([ADM])\s+(.+?)$/) {
        my($op, $filename) = ($1, $2);
        push @filenames, $filename if $op =~ /^[AM]/ && $filename =~ /\.scad$/;
    } elsif($line =~ /^([0-9a-f]+)\s+(.*?)$/) {
        generate_stl($commit, $message, @filenames) if @filenames;
        ($commit, $message, @filenames) = ($1, $2);
    } else {
        die "$ME: could not parse git log output line: $line\n";
    }
}
generate_stl($commit, $message, @filenames) if @filenames;

exit 0;


sub generate_stl {
    my($commit, $message, @filenames) = @_;
    foreach my $filename (@filenames) {
        my $basename = basename($filename, '.scad');
        my $tmpname = "$basename.tmp.$$.scad";
        system("git show $commit:$filename > $tmpname");
        system("/Applications/OpenSCAD.app/Contents/MacOS/OpenSCAD -o charger_mount.stl $tmpname");
        system("git add charger_mount.stl");
        system('git', 'commit', '-m', "Generate STL from $commit:$filename ($message)", 'charger_mount.stl');
        unlink($tmpname);
    }
}
